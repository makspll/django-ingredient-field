version: 2.1

jobs: 
  build:
    docker: 
      - image: circleci/python:3.8
    steps: 
      - checkout 
      - run: 
          name: download dependencies
          working_directory: django-ingredient-field
          command: |
              python3 -m venv ../venv
              . ../venv/bin/activate
              pip install -r ../requirements_dev.txt
              python3 setup.py sdist
              python3 setup.py install 
      - run: 
          name: run tests
          command: |
              . venv/bin/activate
              python3 manage.py test dj_ingredient_field
  publish:
    docker:
      - image: circleci/python:3.8
    parameters:
      production: 
        type: boolean
        default: false
      bump-version-part:
        type: string
        default: patch
    steps:
      - checkout 
      - run: 
          name: download dependencies
          command: |
              python3 -m venv ./venv
              . ./venv/bin/activate
              pip install -r requirements_dev.txt
      - unless:
          condition: << parameters.production >>
          steps:
            run: 
              name: set TWINE_ARGS
              command: |
                # set arguments for test repository for next step
                echo "export TWINE_ARGS='--repository testpypi'" >> $BASH_ENV
      - when:
          condition:
            equal: ["major", << parameters.bump-version-part >>]
          steps:
            run:
              name: set BUMP2VERSION_ARGS
              command: |
                echo "export BUMP2VERSION_ARGS='--tag'" >> $BASH_ENV
      - run: 
          name: bump version
          command: |
            . ./venv/bin/activate
            bumpversion << parameters.bump-version-part >> --message='{current_version} â†’ {new_version} [skip ci]' --allow-dirty ${BUMP2VERSION_ARGS}
            git config --global user.email "bumpversionbot@gmail.com"
            git config --global user.name "bumpversionbot"
            git push -q https://${GITHUB_TOKEN}@github.com/makspll/django-ingredient-field.git HEAD:<< pipeline.git.branch >>
            git push -q https://${GITHUB_TOKEN}@github.com/makspll/django-ingredient-field.git HEAD:<< pipeline.git.branch >> --tags
      - run: 
          name: upload to pypi repository
          working_directory: django-ingredient-field
          command: |
            . ../venv/bin/activate
            python3 setup.py sdist
            twine check dist/*
            twine upload ${TWINE_ARGS} dist/* -p $PYPI_PASSWORD -u $PYPI_USERNAME --non-interactive --skip-existing 
workflows:
  build_test_publish:
    jobs:
      - build
      - publish:
          name: publish-test
          requires:
            - build
          filters:
            branches:
              only:
                - develop
          production: false
          bump-version-part: patch
      - publish:
          name: publish-minor
          requires:
            - build
          filters:
            branches:
              only: 
                - main
          production: true
          bump-version-part: minor
      - publish:
          name: publish-release
          requires:
            - build
          filters:
            tags:
              only: /v.*/
          production: true
          bump-version-part: major